body {
    font-family: fantasy;
    margin: 0;
    /* Margin 0 em body é para que a barra do topo esteja "colada" na janela do navegador*/
}

.header {
    background-color: rgb(15, 15, 15);
    color: white;
    
    /* Como estamos usando float, o header vai "sumir" se não tiver uma altura.
    Para que o header esteja visível, você tem duas saídas:
    1. Adicionar uma altura (height) fixa.
    2. Configurar para que header tenha o tamanho de seus elementos dentro dele,
    não deixando que nada "derrame" para fora. (overflow: auto)
    */

    /* height: 102px; */ 
    overflow: auto;
    border-bottom: 3px solid rgb(216, 216, 0); 

    /* Estilos que se repetem em todas as dimensoes do elemento como 
    padding, border, margin, têm suas variações top-right-left-bottom.
    
    Você pode escrever cada uma delas separadamente
    (padding-top)(padding-right)(padding-bottom)(padding-left)
    ou todas juntas
    (padding: W X Y Z;) ou (padding: X Y;)

    Atenção!
    Com 4 valores:
    o primeiro valor é para CIMA/TOP
    o segundo valor é para DIREITA/RIGHT
    o terceiro valor é para BAIXO/BOTTOM
    o quarto valor é para ESQUERDA/LEFT

    Com 2 valores:
    o primeiro valor é para CIMA/TOP e BOTTOM/RIGHT
    o segundo valor é para DIREITA/RIGHT e ESQUERDA/LEFT
    */
    padding-top: 25px;
    padding-bottom: 25px;
    /* As duas linhas acima são igual a usar a linha de baixo*/
    /* padding: 25px 0 25px 0; */ 
    /* Ou a usar essa outra linha, abaixo */
    /* padding: 25px 0; */
}

.container {
    width: 80%;
    margin: auto;
    /*margin: auto; -> divide o valor que "sobrou" de width nos dois lados do elemento, centralizando-o.*/
}


.navbar {
    list-style: none;
    /*list-style: none; -> elimina os bullets da Lista Não Ordenada.*/
    float: right;
}

.titulo {
    margin: 0;
    float: left;
    padding-top: 5px;
    -webkit-text-stroke-width: 2px;
    -webkit-text-stroke-color: #000;
}

/* .navbar li {
    float: left;
} */

.header .navbar li {
    float: left;
    margin-left: 13px;
    text-transform: uppercase;
}

.destaque {
    color: rgb(216, 216, 0);
}

/* BANNER */

.banner{
    text-align: center;
    background-color: palevioletred;
    background-image: url(cadastrobanner01.png);
    background-repeat: no-repeat;
    background-size: cover ;
    height: 400px;
    
}

.banner h1{
    margin: 0;
    font-size: 60px;
    padding-top: 100px;
    -webkit-text-stroke-width: 3px;
    -webkit-text-stroke-color: #000;
}

.banner h3{
    color: black;
    font-size: 35px;
    -webkit-text-stroke-width: 2px;
    -webkit-text-stroke-color: rgb(216, 216, 0);
}

.saiba-mais button{
    border:0;
    background-color: rgb(216, 216, 0);
    color: white;
    text-transform: uppercase;
    height: 40px;
    padding: 10px 30px 10px 30px;
    margin-top: 25px;
    border-radius: 25px;
    cursor: pointer;
}

.saiba-mais{
    text-align: center;
    background-color: #232323;
    height: 90px;
    
}

.box img{
    height: 100px;
}

.box{
    /*border: 3px solid red;*/
    overflow: auto;
    background-color: #232323;
}

.box-item{

    float: left;
    text-align: center;
    width: 27%;
    padding: 3%;
    color: rgb(216, 216, 0);
    font-size: 20px;
}

/*footer*/


.footer{
text-align: center;
background-color: rgb(15, 15, 15);
height: 90px;
}

.footer h4{
margin: 0;
padding-top: 40px;
font-weight: 100;
color: rgb(216, 216, 0);
}

a{
    color: white;
    text-decoration: white;
    cursor: pointer;
}

a:hover{

    font-weight: 700;
}

.pag-login{

    background-color: #ecf0f1;
}

.box-login{
 background-color: white;
 width: 40%;
 margin: auto;
 text-align: center;
 box-shadow: 5px 7px 13px 1px grey;
}

.pag-login h1{
 margin: 0;
}

.destaquedois{
color: #00fff9;
}

.box .container h1{

    color: rgb(216, 216, 0);
    -webkit-text-stroke-width: 2px;
    -webkit-text-stroke-color: #000;
}

.cadastro {
    width: 60%;
    height: 100%;
    overflow: auto;
    margin: auto;
    align-items: center;
    display: flex;
    flex-direction: column;
    justify-content: center;

}

.borda-cadastro {
    background-color: #202024;
    margin: auto;
    width: 600px;
    height: 690px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    border-radius: 7px;
}

.cadastro input {
    width: 70%;
    height: 50px;
    background-color: #121214;
    border-radius: 7px;
    border: none;
    margin-bottom: 10px;
    padding-left: 10px;
    color: aliceblue;

}

input:focus { 
    outline: none !important;
    border-color: #009add;
    box-shadow: 0 0 10px #009add;
    transition: 0.7s;
}

.cadastro a {
    text-decoration: none;
    color: #009add;
}

.cadastro a:hover {
    transition: 0.7s;
    color: #0084ff;
}

.cadastro button {
    background:rgb(255, 15, 55);
    border-radius: 5px;
    border: 0px;
    color: rgb(255, 255, 255);
    font-weight: bold;
    height: 50px;
    width: 340px;
    transition: background 0.2s ease 0s, color 0.2s ease 0s;
    font-size: 16px;
    text-transform: uppercase;
    outline: none;
    cursor: pointer;
}

.cadastro p {
    font-size: 12px;
    text-align: center;
    color: rgb(216, 216, 0);
}

.btn-green{
    background-color: rgb(255, 15, 55);
    color: white;
    font-family: fantasy;
    height: 40px;
    width: 100px;
    cursor: pointer;
}

@import url("https://fonts.googleapis.com/css?family=Montserrat:100");
html, body, h1 {
  padding: 0;
  margin: 0;
  font-family: fantasy;
}



#wrapper {
  text-align: center;
}

.sub {
  color: #64dcdc;
  letter-spacing: 1em;
}

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch {
  position: relative;
  color: yellow;
  font-size: 4em;
  letter-spacing: 0.5em;
  /* Animation provies a slight random skew. Check bottom of doc
  for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse;
}
.glitch::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: 2px;
  text-shadow: -2px 0 #ff00c1;
  /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
  clip: rect(44px, 450px, 56px, 0);
  /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
  animation: glitch-anim 5s infinite linear alternate-reverse;
}
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: -2px;
  text-shadow: -2px 0 #00fff9, 2px 2px green;
  animation: glitch-anim2 1s infinite linear alternate-reverse;
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(79px, 9999px, 54px, 0);
    transform: skew(0.76deg);
  }
  5% {
    clip: rect(62px, 9999px, 64px, 0);
    transform: skew(0.51deg);
  }
  10% {
    clip: rect(66px, 9999px, 46px, 0);
    transform: skew(0.23deg);
  }
  15% {
    clip: rect(82px, 9999px, 75px, 0);
    transform: skew(0.97deg);
  }
  20% {
    clip: rect(46px, 9999px, 82px, 0);
    transform: skew(0.1deg);
  }
  25% {
    clip: rect(93px, 9999px, 34px, 0);
    transform: skew(0.58deg);
  }
  30% {
    clip: rect(26px, 9999px, 36px, 0);
    transform: skew(0.05deg);
  }
  35% {
    clip: rect(93px, 9999px, 21px, 0);
    transform: skew(0.62deg);
  }
  40% {
    clip: rect(26px, 9999px, 50px, 0);
    transform: skew(0.29deg);
  }
  45% {
    clip: rect(76px, 9999px, 18px, 0);
    transform: skew(0.15deg);
  }
  50% {
    clip: rect(17px, 9999px, 57px, 0);
    transform: skew(0.63deg);
  }
  55% {
    clip: rect(65px, 9999px, 11px, 0);
    transform: skew(0.85deg);
  }
  60% {
    clip: rect(40px, 9999px, 38px, 0);
    transform: skew(0.71deg);
  }
  65% {
    clip: rect(100px, 9999px, 57px, 0);
    transform: skew(0.2deg);
  }
  70% {
    clip: rect(18px, 9999px, 86px, 0);
    transform: skew(0.66deg);
  }
  75% {
    clip: rect(78px, 9999px, 9px, 0);
    transform: skew(0.52deg);
  }
  80% {
    clip: rect(76px, 9999px, 76px, 0);
    transform: skew(0.8deg);
  }
  85% {
    clip: rect(97px, 9999px, 89px, 0);
    transform: skew(0.15deg);
  }
  90% {
    clip: rect(75px, 9999px, 47px, 0);
    transform: skew(0.38deg);
  }
  95% {
    clip: rect(97px, 9999px, 50px, 0);
    transform: skew(0.15deg);
  }
  100% {
    clip: rect(22px, 9999px, 29px, 0);
    transform: skew(0.6deg);
  }
}
@keyframes glitch-anim2 {
  0% {
    clip: rect(45px, 9999px, 99px, 0);
    transform: skew(0.76deg);
  }
  5% {
    clip: rect(28px, 9999px, 99px, 0);
    transform: skew(0.21deg);
  }
  10% {
    clip: rect(93px, 9999px, 8px, 0);
    transform: skew(0.05deg);
  }
  15% {
    clip: rect(35px, 9999px, 46px, 0);
    transform: skew(0.56deg);
  }
  20% {
    clip: rect(75px, 9999px, 81px, 0);
    transform: skew(0.71deg);
  }
  25% {
    clip: rect(33px, 9999px, 86px, 0);
    transform: skew(0.22deg);
  }
  30% {
    clip: rect(29px, 9999px, 13px, 0);
    transform: skew(0.37deg);
  }
  35% {
    clip: rect(21px, 9999px, 16px, 0);
    transform: skew(0.27deg);
  }
  40% {
    clip: rect(1px, 9999px, 44px, 0);
    transform: skew(0.33deg);
  }
  45% {
    clip: rect(83px, 9999px, 67px, 0);
    transform: skew(0.07deg);
  }
  50% {
    clip: rect(20px, 9999px, 43px, 0);
    transform: skew(0.75deg);
  }
  55% {
    clip: rect(6px, 9999px, 27px, 0);
    transform: skew(0.98deg);
  }
  60% {
    clip: rect(52px, 9999px, 43px, 0);
    transform: skew(0.17deg);
  }
  65% {
    clip: rect(69px, 9999px, 11px, 0);
    transform: skew(0.93deg);
  }
  70% {
    clip: rect(100px, 9999px, 37px, 0);
    transform: skew(0.6deg);
  }
  75% {
    clip: rect(97px, 9999px, 60px, 0);
    transform: skew(0.77deg);
  }
  80% {
    clip: rect(61px, 9999px, 53px, 0);
    transform: skew(0.6deg);
  }
  85% {
    clip: rect(63px, 9999px, 17px, 0);
    transform: skew(0.95deg);
  }
  90% {
    clip: rect(96px, 9999px, 53px, 0);
    transform: skew(0.27deg);
  }
  95% {
    clip: rect(57px, 9999px, 31px, 0);
    transform: skew(0.12deg);
  }
  100% {
    clip: rect(33px, 9999px, 21px, 0);
    transform: skew(0.41deg);
  }
}
@keyframes glitch-skew {
  0% {
    transform: skew(-3deg);
  }
  10% {
    transform: skew(0deg);
  }
  20% {
    transform: skew(-2deg);
  }
  30% {
    transform: skew(3deg);
  }
  40% {
    transform: skew(5deg);
  }
  50% {
    transform: skew(2deg);
  }
  60% {
    transform: skew(-3deg);
  }
  70% {
    transform: skew(4deg);
  }
  80% {
    transform: skew(0deg);
  }
  90% {
    transform: skew(0deg);
  }
  100% {
    transform: skew(4deg);
  }
}



